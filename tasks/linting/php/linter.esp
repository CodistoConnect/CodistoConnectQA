(function(SHA1) {

	var MIN_PHP = Application.PHP_MIN_VERSION || "5.2";

	var Status = 403;
	var Errors = [];
	var Warnings = [];
	var PluginPath = "";

	try {

		//TODO decouple the git checkout code in bash so that bondi linter.esp can use it too to checkout the version that it needs
		//Perhaps the webhook should checkout the SHA ready for the linter ...

		var FCGIReq = new FastCGIClient();
		FCGIReq.Open("POST", "fastcgi://127.0.0.1:6972/phplinter?phpversion=" + MIN_PHP + "&stashpop=1&sha1=" + SHA1);
		FCGIReq.Send();

		if(FCGIReq.Status == 200) {

			var ResponseBody = FCGIReq.ResponseBody.split("\n");
			PluginPath = ResponseBody[ResponseBody.length - 2] + "/";

			Status = FCGIReq.Status;
			var FileNameToken = "FILE: ";
			var FileName;

			for(var i = 0 ; i < ResponseBody.length; i++) {

				var Line = ResponseBody[i];

				if(Line.indexOf(FileNameToken) == 0) {
					FileName = Line.substr(FileNameToken.length, Line.length - FileNameToken.length);
				}
				var LineTokens = Line.split("|");
				if(LineTokens.length == 3) {

					var Type = LineTokens[1].trim();

					switch(Type){
						case "ERROR":
						Errors.push({"filename" : FileName.replace(PluginPath, ""), "line": parseInt(LineTokens[0].trim(), 10), "text" : LineTokens[2]});
						break;
						case "WARNING":
						Warnings.push({"filename" : FileName.replace(PluginPath, ""), "line" : parseInt(LineTokens[0].trim(), 10), "text": LineTokens[2]});
						break;
					}
				}
			}
		}

	} catch(e) {
		Debug.LogInfo(e.toSource());
	}

	finally {

		return {
			"status" : Status,
			"errors" : Errors,
			"warnings" : Warnings,
			"pluginpath" : PluginPath
		};
	}
};
